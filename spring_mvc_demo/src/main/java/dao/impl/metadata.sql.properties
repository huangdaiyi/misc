sql.create_metadata = \
	INSERT INTO `metadata_index`( \
			`id`,`parent_id`,`origin_name`,`name`,`is_folder`,`sort_priority`,`size`,`modified_at`, \
			`modified_by`,`backup_count`,`device_uid`,`link_path`,`note`,`params`,`icon_block_id`,`icon_text`,`icon_text_color`,`icon_text_style`, \
			`is_encrypted`,`created_by`,`created_at`,`block_id`,`shared_root_id`,`sync_root_id`,`type`,`owner_id`, `is_visible`, `ref_id`, `ref_to_owner_id` \
		) VALUES ( \
			:id, :parentId, :originName, LOWER(:name), :folder,:sortPriority, :size, :modifiedAt, \
			:modifiedBy, :backupCount, :deviceUid, :fullSourcePath, :note, :params, :iconBlockId,:iconText,:iconTextColor,:iconTextStyle, \
			:encrypted, :createdBy, :createdAt, :blockId, :sharedRootId, :syncRootId, :type, :ownerId, :visible, :refId, :refToOwnerId) \
	ON DUPLICATE KEY UPDATE  \
	     `origin_name`=:originName,`name`=:name,`sort_priority`=:sortPriority,`modified_at`=:modifiedAt, \
	     `modified_by`=:modifiedBy, `backup_count`=:backupCount, `device_uid`=:deviceUid,`link_path`=:fullSourcePath,`note`=:note, \
	     `params`=:params,`icon_block_id`=:iconBlockId,`icon_text`=:iconText,`icon_text_color`=:iconTextColor,`icon_text_style`=:iconTextStyle,`is_encrypted`=:encrypted,\
	     `created_by`=:createdBy,`created_at`=:createdAt,`block_id`=:blockId,`shared_root_id`=:sharedRootId, \
	     `sync_root_id`=:syncRootId,`type`=:type,`owner_id`=:ownerId, `is_visible` = :visible , `ref_id` = :refId, `ref_to_owner_id` = :refToOwnerId

sql.get_metadata_by_criteria = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`, mi.`icon_text`, mi.`icon_text_color`, mi.`icon_text_style`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`is_visible` AS `visible`, mi.`type`, mi.`owner_id`,mi.`ref_id`,mi.`ref_to_owner_id`,  \
			mi.`item_text_color`, mi.`item_bg_color`, mi.`item_text_bold`, mi.`item_text_italic`, mi.`item_text_underline`, \
			miaa.`folders_count`, miaa.`files_count`, miaa.`total_size`, miaa.`width`, miaa.`height`, miaa.`collaborate_count`, miaa.`sync_root_count`, miaa.`ref_link_count` \
		FROM `metadata_index` mi \
		LEFT JOIN `metadata_index_additional_attr` miaa ON (miaa.`metadata_index_id` = mi.`id` AND miaa.`is_backup` = 0) \
		WHERE mi.`parent_id` = :parentId AND mi.`name` = :name \
			AND mi.`device_uid` = :deviceUid AND mi.`link_path` = :fullSourcePath;

sql.get_metadata_by_parent_id = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`,mi.`icon_text`,mi.`icon_text_color`,mi.`icon_text_style`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`is_visible` AS `visible`, mi.`type`, mi.`owner_id` ,mi.`ref_id`,mi.`ref_to_owner_id`, \
			miaa.`folders_count`, miaa.`files_count`, miaa.`total_size`, miaa.`width`, miaa.`height`, miaa.`collaborate_count`, miaa.`sync_root_count`, miaa.`ref_link_count`, \
            mi.`ref_id`, mi.`ref_to_owner_id`, mi.`item_text_color`, mi.`item_bg_color`, mi.`item_text_bold`, mi.`item_text_italic`, mi.`item_text_underline` \
		FROM `metadata_index` mi \
		LEFT JOIN `metadata_index_additional_attr` miaa ON (miaa.`metadata_index_id` = mi.`id` AND miaa.`is_backup` = 0) \
		WHERE mi.`parent_id` = :parentId
		
sql.get_metadata_by_ref_id = \
	SELECT mi.`id`, mi.`parent_id` FROM `metadata_index` mi \
		WHERE mi.`owner_id` = :userId AND mi.`ref_id` = :refId
		
sql.get_refmetadata_by_shared_id = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`,mi.`icon_text`,mi.`icon_text_color`,mi.`icon_text_style`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`is_visible` AS `visible`, mi.`type`, mi.`owner_id`,mi.`ref_id`,mi.`ref_to_owner_id`  \
		FROM `metadata_index` mi \
		WHERE mi.`type`= 'reflink' AND mi.`ref_id` IN (:refId);
		
sql.get_metadata_by_ref_id_only = \
	SELECT mi.`id`, mi.`parent_id` FROM `metadata_index` mi \
		WHERE mi.`ref_id` = :refId
		
sql.get_metadata_sub_by_parent_id = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`,mi.`icon_text`,mi.`icon_text_color`,mi.`icon_text_style`, mi.`is_encrypted` as `encrypted`,  mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, \
			mi.`type`, mi.`owner_id` ,mi.`ref_id`,mi.`ref_to_owner_id` \
		FROM `metadata_index` mi \
		WHERE mi.owner_id=:owner_id AND mi.`parent_id` IN ( :parentId ) 	

sql.get_metadata_by_parent_id_and_name = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`is_visible` AS `visible`, mi.`type`, mi.`owner_id`,mi.`ref_id`,mi.`ref_to_owner_id`,  \
			miaa.`folders_count`, miaa.`files_count`, miaa.`total_size`, miaa.`width`, miaa.`height`, miaa.`collaborate_count`, miaa.`sync_root_count`, miaa.`ref_link_count` \
		FROM `metadata_index` mi \
		LEFT JOIN `metadata_index_additional_attr` miaa ON (miaa.`metadata_index_id` = mi.`id` AND miaa.`is_backup` = 0) \
		WHERE mi.`parent_id` = :parentId AND mi.`name` = :name;
		
sql.get_metadata_by_type = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`,mi.`icon_text`,mi.`icon_text_color`,mi.`icon_text_style`, mi.`is_encrypted` as `encrypted`, \
			mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`is_visible` AS `visible`, mi.`type`, mi.`owner_id`,mi.`ref_id`,mi.`ref_to_owner_id`,  \
			miaa.`folders_count`, miaa.`files_count`, miaa.`total_size`, miaa.`width`, miaa.`height`, miaa.`collaborate_count`, miaa.`sync_root_count`, miaa.`ref_link_count` \
		FROM `metadata_index` mi \
		LEFT JOIN `metadata_index_additional_attr` miaa ON (miaa.`metadata_index_id` = mi.`id` AND miaa.`is_backup` = 0) \
		WHERE mi.`type` = :type and mi.`owner_Id` = :ownerId

sql.get_folders_by_parent_id = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`is_visible` AS `visible`, mi.`type`, mi.`owner_id`,mi.`ref_id`,mi.`ref_to_owner_id`,  \
			miaa.`folders_count`, miaa.`files_count`, miaa.`total_size`, miaa.`width`, miaa.`height`, miaa.`collaborate_count`, miaa.`sync_root_count`, miaa.`ref_link_count` \
		FROM `metadata_index` mi \
		LEFT JOIN `metadata_index_additional_attr` miaa ON (miaa.`metadata_index_id` = mi.`id` AND miaa.`is_backup` = 0) \
		WHERE mi.`parent_id` = :parentId AND mi.`is_folder` = true

sql.get_all_files_in_link_folder = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`is_visible` AS `visible`, mi.`type`, mi.`owner_id`,mi.`ref_id`,mi.`ref_to_owner_id`,  \
			miaa.`folders_count`, miaa.`files_count`, miaa.`total_size`, miaa.`width`, miaa.`height`, miaa.`collaborate_count`, miaa.`sync_root_count`, miaa.`ref_link_count` \
		FROM `metadata_index` mi \
		LEFT JOIN `metadata_index_additional_attr` miaa ON (miaa.`metadata_index_id` = mi.`id` AND miaa.`is_backup` = 0) \
		WHERE mi.`link_path` LIKE CONCAT(:fullSourcePath, '/%') \
		AND (:includeConmmonFoders = true OR NOT (`sync_root_id` = '' OR `sync_root_id` IS NULL));

sql.get_all_files_by_device_uid = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`is_visible` AS `visible`, mi.`type`, mi.`owner_id`,mi.`ref_id`,mi.`ref_to_owner_id`,  \
			miaa.`folders_count`, miaa.`files_count`, miaa.`total_size`, miaa.`width`, miaa.`height`, miaa.`collaborate_count`, miaa.`sync_root_count`, miaa.`ref_link_count` \
		FROM `metadata_index` mi \
		LEFT JOIN `metadata_index_additional_attr` miaa ON (miaa.`metadata_index_id` = mi.`id` AND miaa.`is_backup` = 0) \
		WHERE mi.`device_uid` = :deviceUid AND mi.`device_uid` <> '';

sql.get_metadata = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`,mi.`icon_text`,mi.`icon_text_color`,mi.`icon_text_style`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`is_visible` AS `visible`, mi.`type`, mi.`owner_id`,mi.`ref_id`,mi.`ref_to_owner_id`,  \
			miaa.`folders_count`, miaa.`files_count`, miaa.`total_size`, miaa.`width`, miaa.`height`, miaa.`collaborate_count`, miaa.`sync_root_count`, miaa.`ref_link_count` \
		FROM `metadata_index` mi \
		LEFT JOIN `metadata_index_additional_attr` miaa ON (miaa.`metadata_index_id` = mi.`id` AND miaa.`is_backup` = 0) \
		WHERE mi.`id` = :id;
		
sql.get_metadata_by_shared_root = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`backup_count`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`,mi.`icon_text`,mi.`icon_text_color`,mi.`icon_text_style`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`type`, mi.`owner_id` ,mi.`ref_id`,mi.`ref_to_owner_id` \
		FROM `metadata_index` mi \
		WHERE mi.`shared_root_id` = :sharedRootId 	AND mi.`note` != "" AND mi.`note` Like CONCAT('%', :searchKey, '%');

sql.delete_metadata = \
	DELETE FROM `metadata_index` WHERE id = :id;
	
sql.batch_delete_metadata = \
	DELETE FROM `metadata_index` WHERE id in (:id)

sql.get_user_allmetadatanode = \
	SELECT id,parent_id,type from metadata_index WHERE owner_id=:owner_id
	
sql.get_owner_metadta_by_extensions = \
	SELECT `id`, `name`, `backup_count` \
		FROM `metadata_index` \
		WHERE `owner_id` = :ownerId \
		  AND substring_index(name,'.',-1) in (:extensions) \
		  AND instr(name,'.') > 0 \
		  AND is_folder = 0;

sql.get_root_metadata_id = \
	SELECT `id` \
		FROM `metadata_index` \
		WHERE `owner_id` = :ownerId and parent_id = '';

sql.update_note = \
	UPDATE `metadata_index` \
		SET `note` = :note, `modified_at` = :modifiedAt, `modified_by` = :modifiedBy \
		WHERE `id` = :id;

sql.update_new_name = \
	UPDATE `metadata_index` \
		SET `name` = :newName, `origin_name` = :originNewName, `link_path` = :newSourcePath \
		WHERE `id` = :id;

sql.update_new_name_to_reflink = \
	UPDATE `metadata_index` \
		SET `name` = :newName, `origin_name` = :originNewName, `link_path` = :newSourcePath \
		WHERE `ref_id` = :refId;
		
sql.update_backup_count = \
	UPDATE `metadata_index` \
		SET `backup_count` = :backupCount \
		WHERE `id` = :id;
		
sql.update_file_metadata = \
	UPDATE `metadata_index` \
		SET `modified_at` = :modifiedAt, `modified_by` = :modifiedBy, `block_id`= :blockId,`size`=size,`params`= :params,`owner_id = :ownerId\
		WHERE `id` = :id;

sql.clean_metadata_icon = \
	UPDATE `metadata_index` \
		SET `icon_block_id` = '' \
		WHERE `id` = :id;

sql.update_metadata_icon = \
	UPDATE `metadata_index` \
		SET `icon_block_id` = :iconBlockId ,`icon_text` = :iconText ,`icon_text_color` = :iconTextColor ,`icon_text_style` = :iconTextStyle \
		WHERE `id` = :id;
		
sql.update_metadata = \
	UPDATE `metadata_index` \
		SET `parent_id` = :parentId, `origin_name` = :originName, \
			`name` = :name, `is_folder` = :folder, `sort_priority` = :sortPriority, \
			`size` = :size, `modified_at` = :modifiedAt, `modified_by` = :modifiedBy, \
			`backup_count` = :backupCount, `device_uid` = :deviceUid, `link_path` = :fullSourcePath, \
			`note` = :note, `params` = :params, `icon_block_id` = :iconBlockId, \
			`is_encrypted` = :encrypted, `created_by` = :createdBy, `created_at` = :createdAt, \
			`block_id` = :blockId, `shared_root_id` = :sharedRootId, `sync_root_id` = :syncRootId, `type` = :type, `owner_id` = :ownerId, \
			`is_visible` = :visible \
		WHERE `id` = :id;

sql.update_metadata_parent_id = \
	UPDATE `metadata_index` \
		SET `parent_id` = :parentId \
		WHERE `id` = :id;

sql.update_image_width_height = \
	UPDATE `metadata_index_additional_attr` SET `width` = :width, `height` = :height WHERE `metadata_index_id` = :id; 
	
sql.update_image_size = \
	UPDATE `metadata_index` SET `size` = :size WHERE `id` = :id;
	
sql.update_image_block_id = \
	UPDATE `metadata_index` SET `block_id` = :blockId WHERE `id` = :id;
	
sql.update_image_modified_at = \
	UPDATE `metadata_index` SET `modified_at` = :modifiedAt WHERE `id` = :id;

sql.update_shared_root_id = \
	UPDATE `metadata_index` SET `shared_root_id` = :id WHERE `id` = :id;

sql.update_sub_shared_root_id = \
	UPDATE `metadata_index` SET `shared_root_id` = :sharedRootId WHERE `id` = :id;
	
sql.get_max_sort_priority = \
	SELECT IFNULL(MAX(sort_priority), 0)  FROM metadata_index WHERE parent_id = :parentId;

sql.get_metadata_count= \
	SELECT COUNT(1) as `count` FROM metadata_index WHERE is_folder=0 

sql.count_sub_metadatas_by_parent_id = \
	SELECT count(1) FROM metadata_index WHERE parent_id = :parentId AND is_folder = :folder;

sql.batch_get_metadata= \
SELECT `id`, `parent_id`, `origin_name`, `name`, `is_folder` as `folder`, `sort_priority`, `size`, \
			`modified_at`, `modified_by`, `backup_count`, `device_uid`, `link_path` AS `full_source_path`, `note`, `params`, \
			`icon_block_id`, `is_encrypted` as `encrypted`, `created_by`, `created_at`, `block_id`, `shared_root_id`, `sync_root_id`, \
			`type`, `owner_id`,`ref_id`,`ref_to_owner_id`,  `is_visible` AS `visible` FROM `metadata_index`  WHERE is_folder=0 \
		      LIMIT :offset,:rowCount
		      
sql.update_metadata_type = \
	UPDATE `metadata_index` SET `type` = :type WHERE `id` = :id;

sql.update_sync_root_id = \
	UPDATE `metadata_index` SET `sync_root_id` = :syncRootId WHERE `id` = :id;

sql.update_to_link_file = \
	UPDATE `metadata_index` SET `link_path` = :fullSourcePath, `device_uid` = :deviceUid, `type` = 'linkfile' WHERE `id` = :id;

sql.rename_link_folder = \
	UPDATE `metadata_index` \
	SET `link_path` = CONCAT(:newFolderFullSourcePath, SUBSTRING(`link_path`, LENGTH(:oldFolderFullSourcePath) + 1, LENGTH(`link_path`))) \
	WHERE `link_path` = :oldFolderFullSourcePath OR `link_path` LIKE CONCAT(:oldFolderFullSourcePath, '/%');
	
sql.get_owner_metadatas_by_block_id = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`type`, mi.`owner_id`, mi.`is_visible` AS `visible`, false AS `backup`, shared_root_id,mi.`ref_id`,mi.`ref_to_owner_id` \
		FROM `metadata_index` mi \
		WHERE mi.`owner_id` = :ownerId AND mi.`block_id` = :blockId AND mi.`is_visible` = 1

sql.get_metadatas_by_searching_name_and_note = \
	SELECT mi.`id`, mi.`parent_id`, mi.`origin_name`, mi.`name`, mi.`is_folder` as `folder`, mi.`sort_priority`, mi.`size`, \
			mi.`modified_at`, mi.`modified_by`, mi.`device_uid`, mi.`link_path` AS `full_source_path`, mi.`note`, mi.`params`, \
			mi.`icon_block_id`, mi.`is_encrypted` as `encrypted`, mi.`created_by`, mi.`created_at`, mi.`block_id`, \
			mi.`shared_root_id`, mi.`sync_root_id`, mi.`is_visible` AS `visible`, mi.`type`, mi.`owner_id`,mi.`ref_id`,mi.`ref_to_owner_id`,  \
			miaa.`folders_count`, miaa.`files_count`, miaa.`total_size`, miaa.`width`, miaa.`height`, miaa.`collaborate_count`, miaa.`sync_root_count`, miaa.`ref_link_count` \
		FROM `metadata_index` mi \
		LEFT JOIN `metadata_index_additional_attr` miaa ON (miaa.`metadata_index_id` = mi.`id` AND miaa.`is_backup` = 0) \
		WHERE (mi.`name` LIKE CONCAT('%', :keyword, '%') OR mi.`note` LIKE CONCAT('%', :keyword, '%')) \
		AND owner_id = :ownerId AND mi.is_visible = 1 AND (mi.type NOT LIKE '%communicationcommon') \
		AND NOT (origin_name = 'Contact' OR origin_name = 'Chat');

sql.update_file_encryption = \
	UPDATE `metadata_index` \
		SET `block_id` = :blockId, `is_encrypted` = :encrypted, `modified_at` = :modifiedAt, `modified_by` = :modifiedBy \
		WHERE `id` = :id;

sql.transform_sync_to_normal = \
	UPDATE `metadata_index` \
		SET `type` = 'normal', `link_path` = '', `device_uid` = '', `sync_root_id` = '' \
		WHERE `id` = :id;

sql.transform_sync_to_normal_reserve_sync_root_id = \
	UPDATE `metadata_index` \
		SET `type` = 'normal', `link_path` = '', `device_uid` = '' \
		WHERE `id` = :id;

sql.get_folder_ids_by_parent_id = \
	SELECT `id` \
		FROM `metadata_index` mi \
		JOIN `metadata_index_additional_attr` miaa ON mi.`id` = miaa.`metadata_index_id` \
		WHERE mi.`is_folder` = TRUE AND mi.`parent_id` = :parentId \
		AND (:excludeNoAnyFileFolder = FALSE OR miaa.`files_count` > 0);

sql.get_unread_sub_file_count = \
	SELECT COUNT(1) FROM `metadata_index` mi \
		LEFT JOIN `read_history` rh ON mi.`id` = rh.`metadata_index_id` AND rh.`user` = :userId \
		WHERE rh.`metadata_index_id` IS NULL \
		AND mi.`parent_id` = :id \
		AND mi.`is_folder` = FALSE \
		AND (mi.`type` = 'linkfile' OR (mi.`shared_root_id` IS NOT NULL AND mi.`shared_root_id` != ''));

sql.update_item_style = \
	UPDATE `metadata_index` \
		SET `item_text_color` = IFNULL(:itemTextColor, `item_text_color`), \
		`item_bg_color` = IFNULL(:itemBgColor, `item_bg_color`), \
		`item_text_bold` = IFNULL(:itemTextBold, `item_text_bold`), \
		`item_text_italic` = IFNULL(:itemTextItalic, `item_text_italic`), \
		`item_text_underline` = IFNULL(:itemTextUnderline, `item_text_underline`) \
		WHERE `id` = :id;
		
sql.update_sub_items_style = \
	UPDATE `metadata_index` \
		SET `item_text_color` = IFNULL(:itemTextColor, `item_text_color`), \
		`item_bg_color` = IFNULL(:itemBgColor, `item_bg_color`), \
		`item_text_bold` = IFNULL(:itemTextBold, `item_text_bold`), \
		`item_text_italic` = IFNULL(:itemTextItalic, `item_text_italic`), \
		`item_text_underline` = IFNULL(:itemTextUnderline, `item_text_underline`) \
		WHERE `parent_id` = :parentId;

sql.update_global_item_style = \
	UPDATE `metadata_index` \
		SET `item_text_color` = IF(`item_text_color` IS NOT NULL, IFNULL(:itemTextColor, `item_text_color`), NULL), \
		`item_bg_color` = IF(`item_bg_color` IS NOT NULL, IFNULL(:itemBgColor, `item_bg_color`), NULL), \
		`item_text_bold` = IF(`item_text_bold` IS NOT NULL, IFNULL(:itemTextBold, `item_text_bold`), NULL), \
		`item_text_italic` = IF(`item_text_italic` IS NOT NULL, IFNULL(:itemTextItalic, `item_text_italic`), NULL), \
		`item_text_underline` = IF(`item_text_underline` IS NOT NULL, IFNULL(:itemTextUnderline, `item_text_underline`), NULL) \
		WHERE `owner_id` = :ownerId;
		
sql.get_global_item_style = \
	SELECT `item_text_color`, `item_bg_color`, `item_text_bold`, `item_text_italic`, `item_text_underline` \
		FROM `metadata_index` \
		WHERE `name` = :ownerId;
				