sql.get_folder_id_by_criteria = \
	SELECT `id` FROM `metadata_index` \
		WHERE `parent_id` = :parentId AND `name` = :name \
			AND `device_uid` = :deviceUid AND `is_folder` = 1 AND `link_path` = :fullSourcePath;

sql.get_folder_by_sharedId= \
  SELECT `id`,`parent_id`,`origin_name`,`name`,`is_folder` as `folder`,`sort_priority`,`size`,`modified_at`, \
			`modified_by`,`backup_count`,`device_uid`,`link_path`,`note`,`params`,`icon_block_id`,`icon_text`,`icon_text_color`,`icon_text_style`, \
			`is_encrypted`,`created_by`,`created_at`,`block_id`,`shared_root_id`,`sync_root_id`,`type`,`owner_id`, `is_visible` \
  FROM 	`metadata_index` WHERE id=:shared_root_id;

sql.set_folder_linked = \
	UPDATE `mobile_folders` \
		SET `status` = 'sync' \
		WHERE user = :user AND (link_path = :fullSourcePath OR link_path LIKE CONCAT(:fullSourcePath, '/%'));

sql.set_folder_unlinked = \
	UPDATE `mobile_folders` \
		SET `status` = 'unsync' \
		WHERE user = :user AND (link_path = :fullSourcePath OR link_path LIKE CONCAT(:fullSourcePath, '/%'));

sql.query_folder = \
	SELECT mf.id, mf.user AS user_id, mf.link_path AS full_source_path, mf.status, mf.device_uid \
		FROM mobile_folders mf \
		INNER JOIN device_info di ON di.unique_id = mf.device_uid \
		WHERE mf.user = :user AND (mf.status = :type OR :type IS NULL) \
		AND (:fullSourcePath = '' OR mf.link_path LIKE CONCAT(:fullSourcePath, '/%'));

sql.delete_mobile_folder_by_ids = \
	DELETE FROM `mobile_folders` WHERE `id` IN (:idList);

sql.add_global_icon = \
	INSERT INTO `global_folder_icon` (\
	    `block_id`, `default`, `user`, `type`, `system`, `is_folder`, `group_id` \
	    ) VALUES ( \
	    :blockId, :defaultIcon, :user, :type, :system, :folder, :groupId);
	    
sql.delete_global_icon = \
	DELETE FROM  `global_folder_icon` \
	    Where id = :id;

sql.get_global_icon_by_user = \
	SELECT `id`, `block_id`, `default` as defaulticon, `user`, `type`, `system`, \
	     `is_folder` as `folder`,`group_id` as groupid FROM  `global_folder_icon` \
	    Where user = :user_id;

sql.get_global_icon_group_id = \
	SELECT `id` \
      FROM `global_folder_icon_group` \
     WHERE `user` = :user_id \
       AND `is_folder` = :is_folder \
       AND `name` = :group_name;

sql.get_global_icon = \
         SELECT block_id,`default` as defaulticon,`system` \
           FROM ( \
         SELECT id,block_id,`default`,`system` \
           FROM global_folder_icon \
          WHERE `default` = 1 \
            AND `user` = :user_id \
            AND group_id = :group_id \
            AND is_folder = :is_folder \
      UNION ALL \
         SELECT id,block_id,`default`,`system` \
           FROM global_folder_icon \
          WHERE `default` = 0 \
            AND `user` = :user_id \
            AND 1 = :include_user_defined_icon \
            AND group_id = :group_id \
            AND is_folder = :is_folder ) AS RESULT \
       ORDER BY `system` desc,`default` desc,id asc;

sql.move_global_icon = \
	UPDATE global_folder_icon \
		SET group_id = :destinationGroupId \
		WHERE id = :iconId;
	
sql.get_global_icon_group = \
	SELECT gfig.id, gfig.name, (SELECT count(1) FROM global_folder_icon WHERE `user` = gfig.`user` AND group_id = gfig.id) AS iconscount \
		FROM global_folder_icon_group gfig \
		WHERE gfig.`user` = :user_id and gfig.is_folder = :is_folder;

sql.create_global_icon_group = \
    INSERT INTO `global_folder_icon_group` (\
	    `name`, `is_folder`, `user` \
	    ) VALUES ( \
	    :name, :isFolder, :userId);
		
sql.delete_global_icon_group = \
    DELETE FROM  `global_folder_icon_group` \
	    WHERE id = :groupId;
	    	
sql.update_global_icon_group = \
    UPDATE `global_folder_icon_group` \
        SET name = :Name \
	    WHERE id = :Id;
	    		
sql.update_priority = \
	UPDATE metadata_index \
		SET sort_priority = :sortPriority \
		WHERE parent_id = :parentId \
		AND name = :name \
		AND link_path = :fullSourcePath;

sql.get_sub_folder_backup_count= \
    SELECT `name`,`backup_count`,`link_path` AS `source_path` FROM metadata_index \
         WHERE parent_id IN (:id)